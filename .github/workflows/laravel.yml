name: Laravel

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest

    services:
      database:
        image: docker.io/library/mariadb:10.6
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: testing
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          coverage: xdebug
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.0
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.ci.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install NPM Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build assets
        run: pnpm build
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Execute tests (Unit and Feature tests) via Pest
        env:
          DB_PORT: ${{ job.services.database.ports[3306] }}
        run: php artisan test --coverage

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.ci.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Run PHPStan
        run: vendor/bin/phpstan analyse --memory-limit=2G --error-format=github
